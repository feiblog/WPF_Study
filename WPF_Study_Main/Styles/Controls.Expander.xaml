<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:BaseControl="clr-namespace:WPF_Study_Main.Styles.BaseControl">
    
    <!--<ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border Name="Border"  CornerRadius="2 0 0 0" Background="Red" BorderThickness="0 0 1 0">
            <Image Name="image" Source="/Images/Logo1.png" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="image" Property="Source" Value="/Images/Logo.png" />
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="image" Property="Source" Value="/Images/Logo1.png" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="image" Property="Source" Value="/Images/Close.png" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="image" Property="Source" Value="/Images/Close.png" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    
    <Style TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border Name="Border" Grid.Row="0" BorderThickness="1" CornerRadius="2 2 0 0">
                            <Grid HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton  IsChecked="{Binding Path=IsExpanded,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" Grid.Column="1"/>
                                <ContentPresenter Grid.Column="0" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border Name="Content" Grid.Row="1" CornerRadius="0 0 2 2">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="ExperimentExpanderStyle" TargetType="{x:Type BaseControl:BaseExpander}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="0 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type BaseControl:BaseExpander}">
                    <Border Name="bd" BorderThickness="0,1,0,1" >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="HeaderSite" Grid.Row="1" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                 Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}"
                                                 FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"
                                                 FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}"
                                                 FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                 Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding
                                       VerticalContentAlignment}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="19*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition></RowDefinition>
                                                                <RowDefinition></RowDefinition>
                                                            </Grid.RowDefinitions>
                                                            <Path Grid.Column="0" x:Name="arrow" Data="M 6 6 L 12 0 18 6 " HorizontalAlignment="Right" SnapsToDevicePixels="False" Stroke="#918C8C" StrokeThickness="2" VerticalAlignment="Center" Height="12" Margin="0,0,6,0" />
                                                            <ContentPresenter Grid.Row="1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"  />
                                                            <Image x:Name="ImageShow"  Width="48" Height="48" />
                                                            <!--{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DwExpander}}-->
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Source" TargetName="ImageShow" Value="{Binding ExpandingIcon, RelativeSource={RelativeSource AncestorType={x:Type BaseControl:BaseExpander}}}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter Property="Source" TargetName="ImageShow" Value="{Binding UnExpandingIcon, RelativeSource={RelativeSource AncestorType={x:Type BaseControl:BaseExpander}}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <ContentPresenter x:Name="ExpandSite" Grid.Column="0" Grid.Row="2" 
                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                    DockPanel.Dock="Bottom" Focusable="False" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" Visibility="Collapsed" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            <Setter Property="Foreground" TargetName="HeaderSite" Value="#006cf0"/>
                            <!--<Setter Property="Background" TargetName="	"  Value="#F0F3F9"/>-->
                            <Setter Property="Background" TargetName="bd" >
                                  <Setter.Value>
                                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#3C3C3C"></GradientStop>
                                        <GradientStop Offset="1" Color="#FDFBFB"></GradientStop>
                                    </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            <Setter Property="BorderThickness" TargetName="bd" Value="3,0,0,3"/>
                            <Setter Property="BorderBrush" TargetName="bd" Value="#F0F3F9 "/>
                            <Setter Property="CornerRadius" TargetName="bd" Value="6,0,0,6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>